create table public.blogs (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone null,
  description text null,
  user_id uuid null default gen_random_uuid (),
  ond_id uuid null default gen_random_uuid (),
  title text null,
  image text null,
  constraint blogs_pkey primary key (id),
  constraint blogs_ond_id_fkey foreign KEY (ond_id) references ongs (id),
  constraint blogs_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;


create table public.campaign_comments (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone null default now(),
  user_id uuid null default gen_random_uuid (),
  campaign_id uuid null default gen_random_uuid (),
  description text null,
  constraint campaign_comments_pkey primary key (id),
  constraint campaign_comments_campaign_id_fkey foreign KEY (campaign_id) references campaigns (id),
  constraint campaign_comments_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;

create table public.campaign_contributors (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone null default now(),
  campaign_id uuid null default gen_random_uuid (),
  user_id uuid null default gen_random_uuid (),
  money double precision null default '0'::double precision,
  is_anonymous boolean null default false,
  constraint campaign_contributors_pkey primary key (id),
  constraint campaign_contributors_campaign_id_fkey foreign KEY (campaign_id) references campaigns (id),
  constraint campaign_contributors_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;

create table public.campaign_documents (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  document_path text null,
  updated_at timestamp with time zone null default now(),
  campaign_id uuid null default gen_random_uuid (),
  user_id uuid null default gen_random_uuid (),
  is_approved boolean null default false,
  constraint campaign_documents_pkey primary key (id),
  constraint campaign_documents_campaign_id_fkey foreign KEY (campaign_id) references campaigns (id),
  constraint campaign_documents_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;


create table public.campaign_midias (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone null default now(),
  user_id uuid null default gen_random_uuid (),
  campaign_id uuid null default gen_random_uuid (),
  midia_url text null,
  midia_type public.midia_type_enum not null default 'image'::midia_type_enum,
  constraint campaign_midia_pkey primary key (id),
  constraint campaign_midia_campaign_id_fkey foreign KEY (campaign_id) references campaigns (id),
  constraint campaign_midia_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;



create table public.campaign_updates (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone null default now(),
  title text null,
  description text null,
  campaign_id uuid null default gen_random_uuid (),
  user_id uuid null default gen_random_uuid (),
  constraint campaign_updates_pkey primary key (id),
  constraint campaign_updates_campaign_id_fkey foreign KEY (campaign_id) references campaigns (id),
  constraint campaign_updates_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;



create table public.campaigns (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone null default now(),
  category_id uuid null default gen_random_uuid (),
  description text null,
  fundraising_goal double precision null,
  funds_raised double precision null,
  image_cover_url text null,
  institution text null,
  location text null,
  number_of_contributions integer null,
  ong_id uuid null default gen_random_uuid (),
  phone_number text null,
  priority smallint null default '0'::smallint,
  end_date timestamp with time zone null,
  title text null,
  user_id uuid null default gen_random_uuid (),
  start_date timestamp with time zone null,
  is_urgent boolean null default false,
  is_activate boolean null default true,
  beneficiary_name text null,
  campaign_type text null,
  currency text not null default 'AOA'::text,
  birth date null,
  status public.campaign_status null default 'active'::campaign_status,
  constraint campaigns_pkey primary key (id),
  constraint campaigns_category_id_fkey foreign KEY (category_id) references categories (id),
  constraint campaigns_ong_id_fkey foreign KEY (ong_id) references ongs (id),
  constraint campaigns_user_id_fkey foreign KEY (user_id) references profiles (id),
  constraint campaigns_campaign_type_check check (
    (
      campaign_type = any (
        array[
          'Um Individuo'::text,
          'Uma Família'::text,
          'Instituição ONG'::text,
          'Comunitária(Coletiva)'::text,
          'Projecto Específico'::text,
          'Outro'::text
        ]
      )
    )
  ),
  constraint campaigns_currency_check check (
    (
      currency = any (
        array[
          'USD'::text,
          'EUR'::text,
          'AOA'::text,
          'BRL'::text,
          'GBP'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;



create table public.categories (
  id uuid not null,
  name text not null,
  description text null,
  created_at timestamp with time zone not null default now(),
  constraint categories_pkey primary key (id),
  constraint categories_name_key unique (name)
) TABLESPACE pg_default;


create table public.communities (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  user_id uuid null default gen_random_uuid (),
  name text null,
  description text null,
  image text null,
  banner text null,
  constraint comunities_pkey primary key (id),
  constraint comunities_id_fkey foreign KEY (id) references profiles (id)
) TABLESPACE pg_default;



create table public.events (
  id uuid not null default gen_random_uuid (),
  ong_id uuid null default gen_random_uuid (),
  user_id uuid null default gen_random_uuid (),
  title text null,
  location text null,
  description text null,
  background_image_url text null,
  start_date timestamp with time zone null,
  end_date timestamp with time zone null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint events_pkey primary key (id),
  constraint events_ong_id_fkey foreign KEY (ong_id) references ongs (id),
  constraint events_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;


create table public.favorites (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  item_id uuid not null,
  item_type text null,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  constraint favorites_pkey primary key (id),
  constraint favorites_user_id_fkey foreign KEY (user_id) references profiles (id) on delete CASCADE,
  constraint favorites_item_type_check check (
    (
      item_type = any (
        array[
          'blog'::text,
          'event'::text,
          'ong'::text,
          'campaign'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;


create table public.feeds (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  user_id uuid null default gen_random_uuid (),
  ong_id uuid null default gen_random_uuid (),
  image text null,
  description text null,
  constraint feeds_pkey primary key (id),
  constraint feeds_ong_id_fkey foreign KEY (ong_id) references ongs (id),
  constraint feeds_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;


create table public.notifications (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  title text not null,
  message text not null,
  type text not null,
  created_at timestamp without time zone null default now(),
  is_read boolean null default false,
  image_url text null,
  constraint notifications_pkey primary key (id),
  constraint notifications_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE,
  constraint notifications_type_check check (
    (
      type = any (
        array[
          'Campaign'::text,
          'Emergency'::text,
          'Community'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;


create table public.ongs (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone null default now(),
  about text null,
  bio text null,
  cover_image_url text null,
  is_verified boolean null default false,
  mission text null,
  name text null,
  phone_number text null,
  profile_image_url text null,
  services_number bigint null default '0'::bigint,
  supports_number bigint null default '0'::bigint,
  user_id uuid null default gen_random_uuid (),
  vision text null,
  status text not null default 'pending'::text,
  email text null,
  website text null,
  constraint ongs_pkey primary key (id),
  constraint ongs_user_id_fkey foreign KEY (user_id) references profiles (id),
  constraint ongs_status_check check (
    (
      status = any (
        array[
          'pending'::text,
          'active'::text,
          'inactive'::text,
          'failed'::text,
          'canceled'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;



create table public.ongs_documents (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  ong_id uuid null,
  statutes_constitutive_act text not null,
  declaration_good_standing text not null,
  minutes_constitutive_assembly text not null,
  public_deed text not null,
  registration_certificate text null,
  nif text not null,
  bi_representative text not null,
  status public.document_status null default 'pending'::document_status,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint ongs_documents_pkey primary key (id),
  constraint ongs_documents_ong_id_fkey foreign KEY (ong_id) references ongs (id),
  constraint ongs_documents_user_id_fkey foreign KEY (user_id) references auth.users (id)
) TABLESPACE pg_default;




create table public.payments (
  id uuid not null default gen_random_uuid (),
  status text null,
  signature text null,
  identifier text null,
  payment_trx text null,
  amount numeric(10, 2) null,
  payment_type text null,
  currency text null,
  created_at timestamp with time zone null default now(),
  constraint payments_pkey primary key (id)
) TABLESPACE pg_default;



create table public.profiles (
  id uuid not null,
  first_name text null,
  email text null,
  avatar_url text null,
  bio text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  location text null,
  is_verified boolean null default false,
  role text null,
  donation_qtd bigint null default '0'::bigint,
  campaign_qtd bigint null default '0'::bigint,
  last_name text null,
  full_name text null,
  phone_number text null,
  constraint profiles_pkey primary key (id),
  constraint profiles_email_key unique (email),
  constraint profiles_id_fkey foreign KEY (id) references auth.users (id),
  constraint email_format check (
    (
      email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text
    )
  ),
  constraint role_check check (
    (
      role = any (
        array['donor'::text, 'recipient'::text, 'admin'::text]
      )
    )
  )
) TABLESPACE pg_default;



create table public.user_fcm_tokens (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  fcm_token text not null,
  created_at timestamp without time zone null default now(),
  constraint user_fcm_tokens_pkey primary key (id),
  constraint user_fcm_tokens_fcm_token_key unique (fcm_token),
  constraint user_fcm_tokens_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;